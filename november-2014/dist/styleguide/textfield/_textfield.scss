@import "../palette/palette";
@import "../animation/animation";
@import "../ripple/ripple";

$textfieldBackgroundColor: transparent;
$textfieldLabelColor: rgba(0, 0, 0, 0.26);
$textfieldBottomBorderColor: rgba(0, 0, 0, 0.12);
$textfieldHighlightColor: nth($primaryPalette, 6);
$textfieldErrorColor: nth($paletteRed, 7);
$textfieldDisabledColor: $textfieldBottomBorderColor;

$textfieldFontSize: 16px;
$textfieldWidth: 100%;

$inputPadding: 4px;
$floatingLabelFontSize: 12px;

$expandableIconDim: 24px;
$expandableSearchIconColor: rgba(0, 0, 0, 0.45);
$expandableSearchIconHighlightColor: $textfieldHighlightColor;

$rippleSize: 32px;

.TextField {
  border       : none;
  border-bottom: 1px solid $textfieldBottomBorderColor;
  display      : block;
  font-size    : $textfieldFontSize;
  margin       : 0;
  padding      : $inputPadding 0;
  width        : $textfieldWidth;
  background   : $textfieldBackgroundColor;
  text-align   : left;
}

.TextField ~ label {
  bottom        : 0;
  color         : $textfieldLabelColor;
  font-size     : $textfieldFontSize;
  left          : 0;
  right         : 0;
  pointer-events: none;
  position      : absolute;
  top           : $inputPadding;
  width         : 100%;
  overflow      : hidden;
  white-space   : nowrap;
  text-align    : left;
}

/** The after label is the colored underline for the TextField **/
.TextField ~ label:after {
  background-color  : $textfieldHighlightColor;
  bottom            : 0;
  content           : '';
  height            : 2px;
  left              : 45%;
  position          : absolute;
  @include material-animation-default();
  visibility        : hidden;
  width             : 10px;
}

/** TextField Focus Styles **/
.TextField:focus {
  outline: none;
}

.TextField:focus ~ label:after {
  left      : 0;
  visibility: visible;
  width     : 100%;
}

/** TextField Invalid Styles **/
.TextField:invalid {
  border-color: $textfieldErrorColor;
  box-shadow  : none;
}

.TextField:invalid ~label:after {
  background-color: $textfieldErrorColor;
}

/** TextField Error **/
.TextField ~ .error {
  color     : $textfieldErrorColor;
  position  : absolute;
  font-size : 12px;
  margin-top: 3px;
  visibility: hidden;
}

.TextField:invalid ~ .error {
  visibility: visible;
}

.TextField.dirty ~ label {
  visibility: hidden;
}

/** Floating Label */
.TextField-floatingLabel ~label {
  @include material-animation-default();
}

.TextField-floatingLabel:focus ~ label,
.TextField-floatingLabel.dirty ~ label {
  color     : $textfieldHighlightColor;
  font-size : $floatingLabelFontSize;
  top       : -($floatingLabelFontSize+$inputPadding);
  visibility: visible;
}

.TextField-floatingLabel:invalid ~ label {
  color    : $textfieldErrorColor;
  font-size: 12px;
}

/** Expandable Icon/Holder */
.ExpandableHolder {
  display      : inline-block;
  position     : relative;

  .TextField {
    @include material-animation-default();
    display  : inline-block;

    // Safari (possibly others) need to be convinced that this field is actually
    // visible, otherwise it cannot be tabbed to nor focused via a <label>. 
    // TODO: In some cases (Retina displays), this is big enough to render the
    // inner element :(
    max-width: 0.1px;

    &:focus,
    &.dirty {
      // This is an unforunate hack. Animating between widths in percent (%)
      // in many browsers (Chrome, Firefox) only animates the inner visual style
      // of the input - the outer bounding box still 'jumps'.
      // Thus assume a sensible maximum, and animate to/from that value.
      max-width: 600px;
    }
  }
}

.ExpandableIcon {
  display     : inline-block;
  width       : $expandableIconDim;
  height      : $expandableIconDim;
  text-align  : center;
  border-color: $expandableSearchIconColor;  // inherits to .IconSearch
  position    : relative;

  &:hover {
    border-color: $expandableSearchIconHighlightColor;
    cursor      : pointer;
  }

  .IconSearch {
    border        : 2px solid #000;
    border-color  : inherit;
    border-radius : 100px;
    position      : relative;
    box-sizing    : border-box;
    width         : 10px;
    height        : 10px;
    display       : inline-block;
    margin        : 1px 4px 4px 1px;
    vertical-align: middle;
  }
  .IconSearch::after {
    content     : '';
    transform   : rotate(-45deg);
    width       : 0;
    border-left : 2px solid #000;
    border-color: inherit;
    height      : 5px;
    position    : absolute;
    display     : inline-block;
    bottom      : -5px;
    right       : -3px;
  }
}

.ExpandableIcon-rippleContainer {
  position: absolute;
  z-index: 2;
  top: -((($rippleSize - $expandableIconDim) / 2) - 0px);
  left: -(($rippleSize - $expandableIconDim) / 2);

  box-sizing: border-box;
  width: $rippleSize;
  height: $rippleSize;
  border-radius: 50%;

  overflow: hidden;
  -webkit-mask-image: -webkit-radial-gradient(circle, white, black);
}

.ExpandableIcon-rippleContainer .Ripple {
  background: $expandableSearchIconHighlightColor;
}

/** Disabled Styling **/
.TextField[disabled] {
  background-color: transparent;
  border-bottom   : 1px dashed $textfieldDisabledColor;
}
